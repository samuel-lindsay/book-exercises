200 -> y
[2,3,5,1,20,43,5,23,5,6] -> a
{1,3,5,1,2} -> a
arr[1,4,3,2,5] ->a
arr[1,4,3,2,5] -> a
c[1,3,2,5,2,3] -> a
c(1,3,2,5,2,3) -> a
a
b <- (1,3,5,2,,2,3,4,5)
b <- c(1,3,5,2,,2,3,4,5)
cls
print("Hello World!")
print("Hello World")
print("Hello World")
my_num++
print("Hello World")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-05-exercises/exercise-1/exercise.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("http://www.openintro.org/stat/data/arbuthnot.R")
```{r}
library(tidyverse)
source("http://www.openintro.org/stat/data/arbuthnot.R")
arbuthnot
glimpse(arbuthnot)
arbuthnot %>% select(boyS)
arbuthnot %>% select(boyS)
arbuthnot %>% select(boys)
arbuthnot$girls
View(arbuthnot)
arbuthnot %>% filter( boys > 8000) %>% select(year)
print("Years with greater than 8000 boys baptized:")
arbuthnot %>% filter( boys > 8000) %>% select(year)
print("Years with greater than 8000 girls baptized")
arbuthnot %>% filter(girls > 8000) %>% select(year)
arbuthnot %>% filter( boys > 8000) %>% select(year)
arbuthnot %>% filter( boys > 8000) %>% select(year)
arbuthnot %>% filter(girls > 8000) %>% select(year)
arbuthnot %>% filter(girls > 8000) %>% select(year)
arbuthnot %>% filter( boys > 8000) %>% select(year)
arbuthnot %>% filter( boys > 8000) %>% select(year)
arbuthnot %>% filter(girls > 8000) %>% select(year)
View(arbuthnot)
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_point()
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_point()
ggplot(data = arbuthnot, aes(x = year, y = boys)) + geom_point()
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_line()
?ggplot
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_histogram(binwidth=500)
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_histogram(binwidth=500)
ggplot(data = arbuthnot, aes(x = year, y = girls)) + geom_line()
arbuthnot %>% select(girls) %>% summary()
arbuthnot %>% select(boys) %>% summary()
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = boy_to_girl_ratio))
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = boy_to_girl_ratio)) + geom_line()
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line()
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line()
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(mean(boy_prop))
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(arbuthnot %>% select(boy_prop) %>% mean()))
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = arbuthnot %>% select(boy_prop) %>%))
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = arbuthnot %>% select(boy_prop) %>% mean()))
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- arbuthnot %>% select(boy_prop) %>% mean()
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean))
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- arbuthnot %>% select(boy_prop) %>% mean()
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- arbuthnot %>% select(boy_prop) %>% mean()
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- arbuthnot %>% mean(boy_prop)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop))
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop))
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy))
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boys))
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop))
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop), type='variables')
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop), type='variables')
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(data = arbuthnot, yintercept = mean(boy_prop))
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop), type='variables')
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(data = arbuthnot, yintercept =)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop))
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- arbuthnot %>% mean(boy_prop)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% mean(boy_prop)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot %>% mean(boy_prop)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop))
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop))
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
arbuthnot %>% summarize(boy_prop_mean = mean(boy_prop))
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- mean(arbuthnot$boy_prop)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- mean(arbuthnot$boy_prop)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean, color=red)
arbuthnot <- arbuthnot %>% mutate(total = boys + girls)
arbuthnot <- arbuthnot %>% mutate(boy_to_girl_ratio = boys / girls, boy_prop = boys / total)
boy_prop_mean <- mean(arbuthnot$boy_prop)
ggplot(data = arbuthnot, aes(x = year, y = boy_prop)) + geom_line() + geom_hline(yintercept = boy_prop_mean)
toupper <- function(word)
c
return
cls
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-2/exercise.R', echo=TRUE)
fruits  <- substr(lyric, 15, nchar(lyric))
fruits_e <- gsub("a", "ee", lyric)
fruits_o <- gsbu("a", "o", lyric)
lyric_e <- paste(intro, fruits_e, sep=" ")
print(paste(intro, fruits_o, sep=" "))
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-3/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-3/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-3/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-3/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-06-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
?seq
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
plot(x_range, wave)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-07-exercises/exercise-2/exercise.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("http://www.openintro.org/stat/data/nycflights.R")
glimpse(nycflights)
names(nycflights)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("http://www.openintro.org/stat/data/nycflights.R")
glimpse(nycflights)
names(nycflights)
View(nycflights)
View(nycflights)
ggplot(data = nycflights, aes(x=dep_delay)) + geom_histogram()
ggplot(data = nycflights, aes(x=dep_delay)) + geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x=dep_delay)) + geom_histogram(binwidth = 150)
ggplot(data = nycflights, aes(x=dep_delay)) + geom_histogram(binwidth = 5)
sfo_feb_flights <- nycflights %>% filter(dest = "SFO", month == 2)
# Insert code for exercise 2 here
# (make the sfo_feb_flights dataset and count the number of observations)
sfo_feb_flights <- nycflights %>% filter(dest == "SFO", month == 2)
sfo_feb_flights <- nycflights %>% filter(dest == "SFO", month == 2)
print(nrow(sfo_feb_flights))
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) + goem_histogram()
ggplot(data = sfo_feb_flights, aes(x = arr_delay)) + geom_histogram()
median(sfo_feb_flights$arr_delay)
mean(sfo_feb_flights$arr_delay)
# Insert code for exercise 4 here
# (calculate mean and median)
paste("The mean flight delay is", mean(sfo_feb_flights$arr_delay))
paste("The median flight delay is", median(sfo_feb_flights$arr_delay))
# Insert code for exercise 4 here
# (calculate mean and median)
paste("The mean flight delay is", mean(sfo_feb_flights$arr_delay))
paste("The median flight delay is", median(sfo_feb_flights$arr_delay))
# Insert code for exercise 4 here
# (calculate mean and median)
paste("The mean flight delay is", mean(sfo_feb_flights$arr_delay))
paste("The median flight delay is", median(sfo_feb_flights$arr_delay))
# Insert code for exercise 5 here
# (group by, summarize by)
nycflights %>% group_by(month) %>% summarize(median_ad = median(arr_delay), n_flights = n()) %>% arrange(desc(median_ad))
# Insert code for exercise 6 here
# (group by, summarize by)
nycflights %>% group_by(carrier) %>% summarize(median_ad = mean(arr_delay), n_flights = n()) %>% arrange(desc(median_ad))
# Insert code for exercise 7 here
# (group by, summarize by)
nycflights$flight_speed <- nycflights$distance / nycflights$air_time
nycflights %>% group_by(carrier) %>% summarize(median_ad = mean(flight_speed), n_flights = n()) %>% arrange(desc(median_ad))
# Insert code for exercise 8 here
# (make the scatterplot)
nycflights %>% ggplot(aes=(x = distance, y=flight_speed)) + ggscatter()
# Insert code for exercise 8 here
# (make the scatterplot)
ggplot(data=nycflights, aes=(x = distance, y=flight_speed)) + ggscatter()
# Insert code for exercise 8 here
# (make the scatterplot)
ggplot(data=nycflights, aes=(x=distance, y=flight_speed)) + ggscatter()
# Insert code for exercise 8 here
# (make the scatterplot)
ggplot(data=nycflights, aes=(x=distance y=flight_speed)) + ggscatter()
# Insert code for exercise 8 here
# (make the scatterplot)
ggplot(data=nycflights, aes=(x=distance, y=flight_speed)) + ggscatter()
# Insert code for exercise 8 here
# (make the scatterplot)
ggplot(data=nycflights, aes(x=distance, y=flight_speed)) + ggscatter()
# Insert code for exercise 8 here
# (make the scatterplot)
ggplot(data=nycflights, aes(x=distance, y=flight_speed)) + geom_point()
nycflights %>% group_by(carrier) %>% summarize(median_ad = mean(distance), n_flights = n()) %>% arrange(desc(median_ad))
# Insert code for exercise 5 here
# (group by, summarize by)
nycflights %>% group_by(origin) %>% summarize(median_ad = median(arr_delay), n_flights = n()) %>% arrange(desc(median_ad))
# Insert code for exercise 5 here
# (group by, summarize by)
nycflights %>% group_by(origin) %>% summarize(median_ad = median(dep_delay), n_flights = n()) %>% arrange(desc(median_ad))
month
```{r}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("http://www.openintro.org/stat/data/nycflights.R")
# Insert code for exercise 2 here
# (make the sfo_feb_flights dataset and count the number of observations)
sfo_feb_flights <- nycflights %>% filter(dest == "SFO", month == 2)
print(nrow(sfo_feb_flights))
# Insert code for exercise 4 here
# (calculate mean and median)
paste("The mean flight delay is", mean(sfo_feb_flights$arr_delay))
paste("The median flight delay is", median(sfo_feb_flights$arr_delay))
# Create a vector `my_breakfast` of everything you ate for breakfast
my_breakfast <- c("eggs", "bacon", "oatmeal")
# Create a vector `my_lunch` of everything you ate (or will eat) for lunch
my_lunch <- c()
# Create a list `meals` that has contains your breakfast and lunch
meals <- list(my_breakfast, my_lunch)
# Add a "dinner" element to your `meals` list that has what you plan to eat
# for dinner
meals$dinner <- c("burrito bowl")
dinner <- meals$dinner
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
meals[[5]] <- meals[["lunch"]]
View(meals)
View(meals)
print(meals)
print(meals[0:1])
early_meals <- meals[c("brexit", "lunch")]
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
early_meals <- meals[c("brexit", "lunch")]
print(meals)
early_meals <- meals[c("brexit", "lunch")]
help(lappy)
??lapply
??lappy
??lappy
arr <- lappy(meals, length)
??lappy
??lapply
lapply(meals, length)
meal_counts <- lapply(meals, length)
View(meals)
View(meal_counts)
return output_vector
return (output_vector)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
add_pizza(meals$lunch)
add_pizza(meals$dinner)
add_pizza(meals$dinner)
add_pizza(meals$dinner)
better_meals <- lapply(meals, add_pizza)
View(better_meals)
View(better_meals)
output_vector <-  c(input_vector, "pizza")
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-08-exercises/exercise-1/exercise.R', echo=TRUE)
View(better_meals)
View(better_meals)
View(better_meals)
View(better_meals)
install.packages("stringr")
updated_sharks <- c(Sharks, Goblin)
sharks <- c("Hammerhead", "Great White", "Thresher")
updated_sharks <- c(Sharks, Goblin)
print(updated_sharks)
updated_sharks <- c(Sharks, Goblin)
sharks <- c("Hammerhead", "Great White", "Thresher")
updated_sharks <- c(Sharks, Goblin)
updated_sharks <- c(Sharks, Goblin)
updated_sharks <- c(sharks, Goblin)
updated_sharks <- c(sharks, "Goblin")
sharks <- c("Hammerhead", "Great White", "Thresher")
updated_sharks <- c(sharks, "Goblin")
print(updated_sharks)
updated_sharks <- c(sharks, c("Goblin"))
print(updated_sharks)
updated_sharks <- c(sharks, "Goblin")
print(updated_sharks)
sharks <- c("Hammerhead", "Great White", "Thresher")
updated_sharks <- c(sharks, "Goblin")
print(updated_sharks)
shark_length <- list(hammerhead = 19.7,
great_white = 20.0,
thresher = 20.0,
goblin = 12.6)
shark_length[-4]
shark_length <- list(hammerhead = 19.7,
great_white = 20.0,
thresher = 20.0,
goblin = 12.6)
shark_length[-4]
shark_length[-4]
is.list(shark_length)
shark_length[[4]]
is.list(shark_length[[4]])
tea <- 3.50
scone <- 3.00
discount <- 0.10
sales_tax <- 0.065
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) + discount
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount + sales_tax
tea <- 3.50
scone <- 3.00
discount <- 0.10
sales_tax <- 0.065
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) + discount
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount + sales_tax
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) + discount
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount + sales_tax
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) + discount
tea <- 3.50
scone <- 3.00
discount <- 0.90
sales_tax <- 1.065
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) * discount
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount * sales_tax
round(total_after_tax, 2)
tea <- 3.50
scone <- 3.00
discount <- 0.90
sales_tax <- 1.065
# Calculate the total by summing all items purchased and apply the discount
total_with_discount <- (tea + 2*scone) * discount
# Now calculate your total after the 10% discount by multiplying your total by discount
total_after_tax <- total_with_discount * sales_tax
round(total_after_tax, 2)
employees <- paste("Employee", 1:100)
salaries <- runif(100, min=40000, max=50000)
salary_adjustments <- runif(100, -5000, 10000)
salaries <- data.frame(employees, salaries, salary_adjustments, stringsAsFactors = false)
salaries <- data.frame(employees, salaries, salary_adjustments, stringsAsFactors = FALSE)
salaries$2018_salary <- salaries$employee_salaries + salaries$salary_adjustments
salaries[["2018 Salary"]] <- salaries$employee_salaries + salaries$salary_adjustments
salaries[["2018 Salary"]] <- salaries$employee_salaries + salaries$salary_adjustments
salaries <- mutate(salaries_2018 = (salaries$salaries + salaries$salary_adjustments))
salaries$salaries_2018 <-  (salaries$salaries + salaries$salary_adjustments))
salaries$salaries_2018 <-  (salaries$salaries + salaries$salary_adjustments)
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-10-exercises/exercise-2/exercise.R', echo=TRUE)
View(salaries)
View(salaries)
salaries$salaries_2018 <-  (salaries$salaries + salaries$salary_adjustments)
salaries$salaries_2018 <- salaries$salaries + salaries$salary_adjustments
sal2018 <- salaries$salaries + salaries$salary_adjustments
sal2018 <- salaries$employee_salaries + salaries$salary_adjustments
salaries$salaries_2018 <- salaries$employee_salaries + salaries$salary_adjustments
salaries$eployee_has_raise <- salaries$salary_adjustments > 0
salaries[salaries$employees == "Employee 5", salaries_2018]
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-10-exercises/exercise-2/exercise.R', echo=TRUE)
salaries[salaries$employees == "Employee 5", salaries_2018]
salaries[(salaries$employees == "Employee 5"), "salaries_2018"]
nrows(salaries[,"employee_has_raise"])
nrow(salaries[,"employee_has_raise"])
nrow(salaries[,"employee_has_raise"])
source('~/School/Year 2 Quarter 2/Info_201/exercises/chapter-10-exercises/exercise-2/exercise.R', echo=TRUE)
nrow(salaries[,"employee_has_raise"])
nrow(salaries[,"employee_has_raise"])
# How many employees got a raise?
salaries[,"employee_has_raise"]
nrow(salaries[salaries$employee_has_raise])
nrow(salaries[salaries$employee_has_raise])
length(salaries[salaries$employee_has_raise])
??vector length
??n
salaries
length(salaries[salaries$employee_has_raise])
salaries[salaries$employee_has_raise]
salaries[,salaries$employee_has_raise]
salaries[salaries$employee_has_raise,]
nrow(salaries[salaries$employee_has_raise,])
max(salaries[,"salary_adjustments"])
salaries["name", salary$salary_adjustments == max(salaries[,"salary_adjustments"])]
salaries["name", (salary$salary_adjustments == max(salaries[,"salary_adjustments"])]
salaries["name", (salary$salary_adjustments == max(salaries[,"salary_adjustments"]))]
salaries["name", (salaries$salary_adjustments == max(salaries[,"salary_adjustments"]))]
max(salaries$salary_adjustments)
salaries["name", (salaries$salary_adjustments == max(salaries$salary_adjustments))]
salaries["employees", (salaries$salary_adjustments == max(salaries$salary_adjustments))]
salaries[(salaries$salary_adjustments == max(salaries$salary_adjustments)), "employees"]
min(salaries$salary_adjustments)
salaries[(salaries$salary_adjustments == min(salaries$salary_adjustments)), "employees"]
mean(salaries$salary_adjustments)
mean(salaries[!salaries$employee_has_raise, "salary_adjustments"])
??csv
write.table(salaries, file = "salaries.csv", sep=",")
write.table(salaries, file = "salaries.csv", sep=",")
write.table(salaries, file = ".\salaries.csv", sep=",")
write.table(salaries, file = ".\\salaries.csv", sep=",")
write.table(salaries, file = ".salaries.csv", sep=",")
??csv
# Write a .csv file of your salary data to your working directory
pwd <- getwd()
pwd
write.table(salaries, file = paste0(pwd,"salaries.csv"), sep=",")
write.table(salaries, file = paste0("","salaries.csv"), sep=",")
setwd("~/School/Year 2 Quarter 2/Info_201/exercises/chapter-10-exercises/exercise-2")
# Write a .csv file of your salary data to your working directory
pwd <- getwd()
pwd
write.table(salaries, file = paste0("pwd","salaries.csv"), sep=",")
write.table(salaries, file = paste0(pwd,"salaries.csv"), sep=",")
# Write a .csv file of your salary data to your working directory
write.table(salaries, file = "salaries.csv", sep=",")
# Write a .csv file of your salary data to your working directory
write.table(salaries, file = "salaries.csv", sep=",")
